define(["exports","core/config","core/toolkitController","components/map/mapController"],function(e,a,t,r){var n=!0;return e.startAppStateTracking=function(){var r,n=window.document.location.href.split("#"),o=n.length>=2;return o?(r=t.stringToObject(n[n.length-1]),a.appStateCurrent=r):e.updateHashWithoutChangeDetect(a.appStateCurrent),e.startDetectUrlChange(),!0},e.startDetectUrlChange=function(){t.topicSubscribe("/dojo/hashchange",function(r){var o=a.appStateCurrent;if(n&&n){var p=t.stringToObject(r);e.appStateCompare(o,p)}})},e.updateHash=function(e){var r=a.appStateCurrent,o=t.mixin(t.clone(r),e),p=t.objectToQuery(o),c=t.getHash();a.appStatePrevious=t.clone(r),a.appStateCurrent=o,c(p),n=!0},e.updateHashWithoutChangeDetect=function(a){n=!1,e.updateHash(a)},e.appStateCompare=function(a,t){var r=[];for(var n in a)a[n].toString()!==t[n].toString()&&r.push(n);return r.length>0&&e.handleChanges(a,t,r),r},e.handleChanges=function(a,r,n){var o=[];return t.arrayEach(n,function(e){switch(e){case"b":t.arrayIndex(o,"basemap")<0&&o.push("basemap");break;case"x":t.arrayIndex(o,"coordinate")<0&&o.push("coordinate");break;case"y":t.arrayIndex(o,"coordinate")<0&&o.push("coordinate");break;case"l":t.arrayIndex(o,"level")<0&&o.push("level")}}),e.updateUIfromChanges(a,r,o),o},e.updateUIfromChanges=function(e,a,n){t.arrayIndex(n,"basemap")>-1&&r.setBasemap(a.b),t.arrayIndex(n,"coordinate")>-1&&r.centerAndZoom([parseFloat(a.x),parseFloat(a.y)],parseFloat(a.l))},e});